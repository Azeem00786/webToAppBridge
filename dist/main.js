(()=>{var e={44:function(e,t){var i,o;"undefined"!=typeof self&&self,void 0===(o="function"==typeof(i=function(){"use strict";const e={};let t=!1;return class{constructor(e={}){this.options={timeout:1e4,...e},t||(this._initMessageListener(),t=!0)}_initMessageListener(){window.addEventListener("message",(t=>{let i;try{if(i="string"==typeof t.data?JSON.parse(t.data):t.data,i&&i.id&&e[i.id]){const t=e[i.id];t.timeoutId&&clearTimeout(t.timeoutId),i.error?t.reject(new Error(i.error)):t.resolve(i.data),delete e[i.id]}}catch(e){console.debug("WebToRNBridge: Received non-JSON message or unrecognized format")}}))}_sendMessage(t,i={}){return new Promise(((o,s)=>{const r=Date.now().toString(36)+Math.random().toString(36).substr(2),n={id:r,action:t,data:i},a=setTimeout((()=>{e[r]&&(s(new Error(`WebToRNBridge: Request timed out after ${this.options.timeout}ms`)),delete e[r])}),this.options.timeout);e[r]={resolve:o,reject:s,timeoutId:a},window.ReactNativeWebView?window.ReactNativeWebView.postMessage(JSON.stringify(n)):window.parent.postMessage(JSON.stringify(n),"*")}))}getNativeLocation(){return this._sendMessage("getNativeLocation")}getFcmToken(){return this._sendMessage("getFcmToken")}isInReactNative(){return"undefined"!=typeof window&&!!window.ReactNativeWebView}}})?i.apply(t,[]):i)||(e.exports=o)}},t={};!function i(o){var s=t[o];if(void 0!==s)return s.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,i),r.exports}(44)})();